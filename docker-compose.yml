version: '2'
services:
  zookeeper1:
    image: wurstmeister/zookeeper
    restart: always
    hostname: zookeeper1
    ports:
      - "2181:2181"
  zookeeper2:
    image: wurstmeister/zookeeper
    restart: always
    hostname: zookeeper2
    ports:
      - "2182:2181"
  kafka1:
    image: wurstmeister/kafka
    restart: always
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.5:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka2:
    image: wurstmeister/kafka
    restart: always
    hostname: kafka2
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.5:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka3:
    image: wurstmeister/kafka
    restart: always
    hostname: kafka3
    ports:
      - "9094:9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.5:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    restart: always
    hostname: kafka-manager
    ports:
      - "9002:9000"
    links:            # 连接本compose文件创建的container
      - kafka1
      - kafka2
      - kafka3
      - zookeeper1
      - zookeeper2
    environment:
      ZK_HOSTS: zookeeper1:2181,zookeeper2:2181
      KAFKA_BROKERS: kafka1:9092,kafka2:9093,kafka3:9094
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true